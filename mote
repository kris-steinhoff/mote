#!/bin/bash

MOTE_DIR="$HOME/.mote"
DOTFILES_REPO="${MOTE_DIR}/dotfiles.git"
GIT_ARGS="--git-dir=${DOTFILES_REPO} --work-tree=$HOME"

Style_Off='\033[0m'
Red='\033[31m'          # Red
Green='\033[32m'        # Green
Yellow='\033[33m'       # Yellow
Bold='\033[1m'
Dim='\033[2m'
Underline='\033[4m'
Underline_Off='\033[24m'

MOTE_OUTPUT_PREFIX="${Dim}[MOTE]$Style_Off"

cmd () {
    if [ ! -z $MOTE_DEBUG ] && [ $MOTE_DEBUG -ne 0 ]; then
        echo -e "${MOTE_OUTPUT_PREFIX} ${*}"
    fi
    ${*}
}

info() {
    echo -e "${MOTE_OUTPUT_PREFIX} $Bold$Green${*}$Style_Off"
}

warn() {
    echo -e "${MOTE_OUTPUT_PREFIX} $Bold$Yellow${*}$Style_Off"
}

error() {
    echo -e "${MOTE_OUTPUT_PREFIX} $Bold$Red${*}$Style_Off"
    exit 1
}

git_command() {
    cmd git ${GIT_ARGS} ${*}
}


case "${1}" in
    "mote-init")
        cmd git init --bare "${DOTFILES_REPO}" ||
            error "init failed"
        cmd git $GIT_ARGS config --local status.showUntrackedFiles no ||
            error "config failed"
        info "New repository created. Use these commands to commit some files"
        info "and push it to a fresh remote:"
        info
        info "${0} add <\$HOME/.bashrc>"
        info "${0} commit -m \"Add .bashrc\""
        info "${0} remote add origin <your_git_remote_url>"
        info "${0} push -u origin master "
        ;;
    "mote-clone")
        cmd git clone --bare "${2}" "${DOTFILES_REPO}" ||
            error "clone failed"
        cmd git $GIT_ARGS config --local status.showUntrackedFiles no ||
            error "config failed"
        cmd git $GIT_ARGS checkout master || \
            warn "Use \"${0} reset\" or \"${0} reset --hard\" to forcibly"
            warn "replace existing files with ones from your repo."
        ;;
    *)
        git_command ${*}
        ;;
esac
